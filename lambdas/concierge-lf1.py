import json
import boto3

sqs = boto3.resource('sqs')

def lambda_handler(event, context):
    """
    Accepts an event generated by AWS Lex V2.
    Posts to an AWS SQS queue.
    """
    
    # Initialize the state we'll return
    my_session_state = event['sessionState']
    my_session_state['intent']['state'] = 'Failed'
    my_session_state['dialogAction'] = {
        'type': 'Close'
    }
    
    # Get and validate the slots
    interpretations = event['interpretations']
    interpretation = next(
        intent for intent in interpretations 
        if intent['intent']['name'] == 'DiningSuggestionsIntent'
    )
    intent = interpretation['intent']
    slots = intent['slots']
    
    if "cuisine" not in slots: return { 'sessionState': my_session_state }
    if "party_size" not in slots: return { 'sessionState': my_session_state }
    if "email" not in slots: return { 'sessionState': my_session_state }
    if "dining_time" not in slots: return { 'sessionState': my_session_state }
    if "location" not in slots: return { 'sessionState': my_session_state }
    
    # Publish to SQS to send recommendations
    queue = sqs.get_queue_by_name(QueueName='concierge-q1')

    # Create a new message
    sqs_response = queue.send_message(
        MessageBody='abc',
        MessageAttributes={
            'cuisine': {
                'StringValue': slots["cuisine"]["value"]["interpretedValue"],
                'DataType': 'String'
            },
            'location': {
                'StringValue': slots["location"]["value"]["interpretedValue"],
                'DataType': 'String'
            },
            'party_size': {
                'StringValue': slots["party_size"]["value"]["interpretedValue"],
                'DataType': 'String'
            },
            'dining_time': {
                'StringValue': slots["dining_time"]["value"]["interpretedValue"],
                'DataType': 'String'
            },
            'email': {
                'StringValue': slots["email"]["value"]["interpretedValue"],
                'DataType': 'String'
            },
        }
    )
    
    # Update state for Lex response
    my_session_state['intent']['state'] = 'Fulfilled'
    
    # Return OK to Lex
    return {
        "sessionState": my_session_state,
    }
    